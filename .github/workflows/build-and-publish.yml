name: Build and Publish Electron App

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.12.0'

      - name: Install dependencies
        run: npm install

      - name: Make the Electron app
        run: npm run make

      - name: Package artifact (macOS)
        if: matrix.os == 'macos-latest'
        run: zip -r app-macos.zip out/make/zip/darwin/x64/*.app
        shell: bash

      - name: Package artifact (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: zip -r app-linux.zip out/make/zip/linux/x64/*.AppImage
        shell: bash

      - name: Package artifact (Windows)
        if: matrix.os == 'windows-latest'
        run: Compress-Archive -Path out\make\squirrel.windows\x64\* -DestinationPath app-windows.zip
        shell: powershell

      - name: Upload artifact (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: app-macos
          path: app-macos.zip

      - name: Upload artifact (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          name: app-linux
          path: app-linux.zip

      - name: Upload artifact (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: app-windows
          path: app-windows.zip
